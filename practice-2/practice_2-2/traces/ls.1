# Memory trace collected by get-trace.o
# Use produce-simple-trace to translate to the format
# used by the driver.
# Format:
# m p u     => p = malloc(u);
# c p u1 u2 => p = calloc(u1,u2);
# r p1 p2 u => p1 = realloc(p2, u);
# f p       => free(p);

r 0x80540d0/6868 0 16
m 0x80540e8/6868 364
r 0x8054258/6868 0 800
r 0x8054580/6868 0 1024
r 0x8054580/6868 0x8054580/6868 2048
f 0x80540e8/6868
m 0x80540e8/6868 40
f 0x80540e8/6868
m 0x80540e8/6868 40
m 0x8054118/6868 32
m 0x8054140/6868 37
m 0x8054170/6868 28
m 0x8054190/6868 92
m 0x80541f0/6868 6
m 0x8054200/6868 6
m 0x8054210/6868 37
f 0x8054210/6868
m 0x8054210/6868 37
m 0x8054d88/6868 32
m 0x8054db0/6868 34
m 0x8054dd8/6868 28
m 0x8054df8/6868 36
m 0x8054240/6868 6
m 0x8054e20/6868 6
m 0x8054e30/6868 35
f 0x8054e30/6868
m 0x8054e30/6868 35
m 0x8054e58/6868 32
m 0x8054e80/6868 32
m 0x8054ea8/6868 28
m 0x8054ec8/6868 48
m 0x8054f00/6868 6
m 0x8054f10/6868 6
m 0x8054f20/6868 33
f 0x8054f20/6868
m 0x8054f20/6868 33
m 0x8054f48/6868 32
m 0x8054f70/6868 30
m 0x8054f98/6868 28
m 0x8054fb8/6868 80
m 0x8055010/6868 6
m 0x8055020/6868 6
m 0x8055030/6868 30
f 0x8055030/6868
m 0x8055030/6868 30
m 0x8055058/6868 32
m 0x8055080/6868 27
m 0x80550a0/6868 28
m 0x80550c0/6868 56
m 0x8055100/6868 6
m 0x8055110/6868 6
m 0x8055120/6868 31
f 0x8055120/6868
m 0x8055120/6868 31
m 0x8055148/6868 32
m 0x8055170/6868 28
m 0x8055190/6868 28
m 0x80551b0/6868 40
m 0x80551e0/6868 6
m 0x80551f0/6868 6
m 0x8055200/6868 34
f 0x8055200/6868
m 0x8055200/6868 34
m 0x8055228/6868 32
m 0x8055250/6868 31
m 0x8055278/6868 28
m 0x8055298/6868 48
m 0x80552d0/6868 6
m 0x80552e0/6868 6
m 0x80552f0/6868 34
f 0x80552f0/6868
m 0x80552f0/6868 34
m 0x8055318/6868 32
m 0x8055340/6868 31
m 0x8055368/6868 28
m 0x8055388/6868 212
m 0x8055460/6868 6
m 0x8055470/6868 6
m 0x8055480/6868 33
f 0x8055480/6868
m 0x8055480/6868 33
m 0x80554a8/6868 32
m 0x80554d0/6868 30
m 0x80554f8/6868 28
m 0x8055518/6868 104
m 0x8055588/6868 6
m 0x8055598/6868 6
m 0x80555a8/6868 30
f 0x80555a8/6868
m 0x80555a8/6868 30
m 0x80555d0/6868 32
m 0x80555f8/6868 27
m 0x8055618/6868 28
m 0x8055638/6868 472
m 0x8055818/6868 6
m 0x8055828/6868 6
m 0x8055838/6868 33
f 0x8055838/6868
m 0x8055838/6868 33
m 0x8055860/6868 32
m 0x8055888/6868 30
m 0x80558b0/6868 28
m 0x80558d0/6868 52
m 0x8055908/6868 6
m 0x8055918/6868 6
m 0x8055928/6868 31
f 0x8055928/6868
m 0x8055928/6868 31
m 0x8055950/6868 32
m 0x8055978/6868 28
m 0x8055998/6868 28
m 0x80559b8/6868 380
m 0x8055b38/6868 6
m 0x8055b48/6868 6
m 0x8055b58/6868 6
f 0x80540d0/6868
m 0x8055b68/6868 22
m 0x80540d0/6868 10
m 0x8055b88/6868 36
m 0x8055bb0/6868 36
m 0x8055bd8/6868 11600
m 0x8058930/6868 12
m 0x8058940/6868 2
c 0x8058950/6868 1 4144
m 0x8059988/6868 27
m 0x80599a8/6868 19
m 0x80599c0/6868 14
m 0x80599d8/6868 14
m 0x80599f0/6868 16
m 0x8059a08/6868 62
m 0x8059a50/6868 19
m 0x8059a68/6868 16
m 0x8059a80/6868 26
m 0x8059aa0/6868 20
m 0x8059ab8/6868 24
m 0x8059ad8/6868 28
m 0x8059af8/6868 22
m 0x8059b18/6868 26
m 0x8059b38/6868 28
m 0x8059b58/6868 22
m 0x8059b78/6868 26
m 0x8059b98/6868 28
m 0x8059bb8/6868 22
m 0x8059bd8/6868 26
m 0x8059bf8/6868 16
f 0x8058950/6868
m 0x8058950/6868 364
f 0x8058950/6868
m 0x8058950/6868 6
m 0x8058960/6868 364
f 0x8058960/6868
m 0x8058960/6868 2436
f 0x8058960/6868
f 0x8058940/6868
f 0x8058930/6868
